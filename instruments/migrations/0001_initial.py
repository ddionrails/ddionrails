# Generated by Django 2.1.7 on 2019-03-22 11:41

import ddionrails.mixins
import ddionrails.validators
from django.db import migrations, models
import django.db.models.deletion
import elastic.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('studies', '0001_initial'),
        ('concepts', '0001_initial'),
        ('data', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConceptQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concepts_questions', to='concepts.Concept')),
            ],
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, validators=[ddionrails.validators.validate_lowercase])),
                ('label', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('analysis_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instruments', to='concepts.AnalysisUnit')),
                ('period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instruments', to='concepts.Period')),
                ('study', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instruments', to='studies.Study')),
            ],
            bases=(elastic.mixins.ModelMixin, ddionrails.mixins.ModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, validators=[ddionrails.validators.validate_lowercase])),
                ('label', models.CharField(blank=True, max_length=255)),
                ('label_de', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('sort_id', models.IntegerField(blank=True, null=True)),
                ('instrument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='instruments.Instrument')),
            ],
            bases=(elastic.mixins.ModelMixin, ddionrails.mixins.ModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='QuestionVariable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions_variables', to='instruments.Question')),
                ('variable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions_variables', to='data.Variable')),
            ],
        ),
        migrations.AddField(
            model_name='conceptquestion',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concepts_questions', to='instruments.Question'),
        ),
        migrations.AlterUniqueTogether(
            name='questionvariable',
            unique_together={('question', 'variable')},
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together={('instrument', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='instrument',
            unique_together={('study', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='conceptquestion',
            unique_together={('question', 'concept')},
        ),
    ]
