name: System-Tests

on:
  push:
    branches:
      - master
      - develop
  # Run tests for any PRs.
  pull_request:

env:
  COMPOSE_FILE: docker-compose.yml:docker-compose-ci.yml

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Before install
        run: |
          docker --version
          docker compose --version
          mkdir codecov
          git submodule init
          git submodule update --recursive
      - name: Install
        run: |
          docker compose config
          docker compose up --build -d
          docker images
          docker ps -a
          docker exec ddionrails-web-1 bash -c \
          'pip install --no-cache-dir poetry'
          docker exec ddionrails-web-1 bash -c "apk add --no-cache npm"
          docker exec ddionrails-web-1 bash -c \
          'poetry export --with dev --without-hashes -f requirements.txt > Requirements.txt'
          docker exec ddionrails-web-1 cat Requirements.txt
          docker exec ddionrails-web-1 pip install -r Requirements.txt
          docker exec ddionrails-web-1 npm install
          docker exec ddionrails-web-1 npm run build
      - name: Unittests
        if: always()
        run: |
          docker exec ddionrails-web-1 pytest --cov-report xml \
          --cov --cov-report html --cov-branch
      - name: Functional import tests
        if: always()
        run: |
          docker exec ddionrails-web-1 pytest --cov-report xml --cov --cov-report html --cov-branch \
          -m "functional" tests/functional/imports/ --cov-append
      #      - name: Functional browser tests
      #        if: always()
      #        run: |
      #          docker exec ddionrails-web-1 pytest --cov-report xml --cov --cov-report html --cov-branch \
      #          -m "functional and not search" tests/functional/browser --cov-append
      - name: Run migrations
        run: docker exec ddionrails-web-1 python manage.py migrate
      - name: Check production settings file
        run: |
          docker exec ddionrails-web-1 python manage.py check \
          --deploy --settings=config.settings.production
      - name: Move codecov report
        if: always()
        run: |
          docker exec ddionrails-web-1 mv coverage.xml codecov/
      - name: Upload codecov report
        if: always()
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./codecov/coverage.xml
          fail_ci_if_error: true
