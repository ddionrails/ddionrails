# Generated by Django 2.2 on 2019-04-09 07:57

import django.db.models.deletion
from django.db import migrations, models

import config.validators
import ddionrails.base.mixins
import ddionrails.elastic.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [("studies", "__first__")]

    operations = [
        migrations.CreateModel(
            name="AnalysisUnit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255,
                        unique=True,
                        validators=[config.validators.validate_lowercase],
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=255)),
                ("description", models.TextField(blank=True)),
            ],
            bases=(models.Model, ddionrails.base.mixins.ModelMixin),
        ),
        migrations.CreateModel(
            name="ConceptualDataset",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255,
                        unique=True,
                        validators=[config.validators.validate_lowercase],
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=255)),
                ("description", models.TextField(blank=True)),
            ],
            bases=(models.Model, ddionrails.base.mixins.ModelMixin),
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255,
                        unique=True,
                        validators=[config.validators.validate_lowercase],
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="concepts.Topic",
                    ),
                ),
                (
                    "study",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="studies.Study"
                    ),
                ),
            ],
            options={"unique_together": {("study", "name")}},
            bases=(
                models.Model,
                ddionrails.base.mixins.ModelMixin,
            ),
        ),
        migrations.CreateModel(
            name="Concept",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="Name of the concept.",
                        max_length=255,
                        unique=True,
                        validators=[config.validators.validate_lowercase],
                        verbose_name="concept name",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        blank=True,
                        help_text="Label (English) of the concept.",
                        max_length=255,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the concept using Markdown."
                    ),
                ),
                (
                    "topics",
                    models.ManyToManyField(related_name="concepts", to="concepts.Topic"),
                ),
            ],
            bases=(
                models.Model,
                ddionrails.base.mixins.ModelMixin,
                ddionrails.elastic.mixins.ModelMixin,
            ),
        ),
        migrations.CreateModel(
            name="Period",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, validators=[config.validators.validate_lowercase]
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=255)),
                ("description", models.TextField(blank=True)),
                ("definition", models.CharField(blank=True, max_length=255)),
                (
                    "study",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="periods",
                        to="studies.Study",
                    ),
                ),
            ],
            options={"unique_together": {("study", "name")}},
            bases=(models.Model, ddionrails.base.mixins.ModelMixin),
        ),
    ]
