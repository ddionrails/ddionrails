""" Generated by Django 2.2.2 on 2019-07-05 11:18 """
# pylint: disable=invalid-name
# pylint: disable=missing-docstring
# Pylint is not fully compatible with isort
# pylint: disable=ungrouped-imports

import uuid

import django.contrib.postgres.fields.jsonb
import django.db.models.deletion
import filer.fields.image
from django.conf import settings
from django.db import migrations, models

import config.validators
import ddionrails.base.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
        ("data", "0001_initial"),
        ("studies", "0001_initial"),
        ("concepts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Instrument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        help_text=(
                            "UUID of the instrument. Dependent on the associated study."
                        ),
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="Name of the instrument (Lowercase)",
                        max_length=255,
                        validators=[config.validators.validate_lowercase],
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        blank=True,
                        help_text="Label of the instrument (English)",
                        max_length=255,
                        verbose_name="Label (English)",
                    ),
                ),
                (
                    "label_de",
                    models.CharField(
                        blank=True,
                        help_text="Label of the instrument (German)",
                        max_length=255,
                        verbose_name="Label (German)",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the instrument (Markdown, English)",
                        verbose_name="Description (Markdown, English)",
                    ),
                ),
                (
                    "description_de",
                    models.TextField(
                        blank=True,
                        help_text="Description of the instrument (Markdown, German)",
                        verbose_name="Description (Markdown, German)",
                    ),
                ),
                (
                    "analysis_unit",
                    models.ForeignKey(
                        blank=True,
                        help_text="Foreign key to concepts.AnalysisUnit",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instruments",
                        to="concepts.AnalysisUnit",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True,
                        help_text="Foreign key to concepts.Period",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instruments",
                        to="concepts.Period",
                    ),
                ),
                (
                    "study",
                    models.ForeignKey(
                        blank=True,
                        help_text="Foreign key to studies.Study",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instruments",
                        to="studies.Study",
                    ),
                ),
            ],
            options={
                "ordering": ("study", "name"),
                "unique_together": {("study", "name")},
            },
            bases=(ddionrails.base.mixins.ModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        help_text=(
                            "UUID of the question. "
                            "Dependent on the associated instrument."
                        ),
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, help_text="Name of the question", max_length=255
                    ),
                ),
                (
                    "label",
                    models.TextField(
                        blank=True,
                        help_text="Label of the question (English)",
                        verbose_name="Label (English)",
                    ),
                ),
                (
                    "label_de",
                    models.TextField(
                        blank=True,
                        help_text="Label of the question (German)",
                        verbose_name="Label (German)",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the question (Markdown, English)",
                        verbose_name="Description (Markdown, English)",
                    ),
                ),
                (
                    "description_de",
                    models.TextField(
                        blank=True,
                        help_text="Description of the question (Markdown, German)",
                        verbose_name="Description (Markdown, German)",
                    ),
                ),
                (
                    "sort_id",
                    models.IntegerField(
                        blank=True,
                        help_text="Sort order of questions within one instrument",
                        null=True,
                        verbose_name="Sort ID",
                    ),
                ),
                (
                    "items",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True,
                        default=list,
                        help_text="Items are elements in a question",
                        null=True,
                    ),
                ),
                (
                    "instrument",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="instruments.Instrument",
                    ),
                ),
            ],
            options={"unique_together": {("instrument", "name")}},
            bases=(ddionrails.base.mixins.ModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="QuestionImage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        help_text=(
                            "UUID of the QuestionImage. "
                            "Dependent on the associated Question"
                        ),
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("label", models.CharField(max_length=255)),
                ("language", models.CharField(max_length=2)),
                (
                    "image",
                    filer.fields.image.FilerImageField(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="image",
                        to=settings.FILER_IMAGE_MODEL,
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="question",
                        to="instruments.Question",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QuestionVariable",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        help_text="Foreign key to instruments.Question",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions_variables",
                        to="instruments.Question",
                    ),
                ),
                (
                    "variable",
                    models.ForeignKey(
                        help_text="Foreign key to data.Variable",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions_variables",
                        to="data.Variable",
                    ),
                ),
            ],
            options={"unique_together": {("question", "variable")}},
        ),
        migrations.CreateModel(
            name="ConceptQuestion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "concept",
                    models.ForeignKey(
                        help_text="Foreign key to concepts.Concept",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="concepts_questions",
                        to="concepts.Concept",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        help_text="Foreign key to instruments.Question",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="concepts_questions",
                        to="instruments.Question",
                    ),
                ),
            ],
            options={"unique_together": {("question", "concept")}},
        ),
    ]
