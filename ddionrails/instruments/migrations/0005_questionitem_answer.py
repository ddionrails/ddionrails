# pylint: disable=all
# Generated by Django 3.2.6 on 2021-09-17 05:20

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [("instruments", "0004_auto_20210624_0828")]

    operations = [
        migrations.AddField(
            model_name="question",
            name="instruction",
            field=models.TextField(
                blank=True,
                default="",
                help_text="Optional question instruction.",
                verbose_name="Instruction",
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="instruction_de",
            field=models.TextField(
                blank=True,
                default="",
                help_text="Optional german question instruction.",
                verbose_name="Instruction German",
            ),
        ),
        migrations.CreateModel(
            name="QuestionItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        help_text="UUID of the QuestionItem. dependent on the associated Question.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "scale",
                    models.CharField(
                        choices=[
                            ("txt", "Information Text"),
                            ("cat", "Multiple-answer multiple choice"),
                            ("bin", "Single-answer multiple choice"),
                            ("int", "Integer"),
                            ("chr", "Open-ended"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "label",
                    models.TextField(
                        blank=True,
                        help_text="Label of the question (English)",
                        verbose_name="Label (English)",
                    ),
                ),
                (
                    "label_de",
                    models.TextField(
                        blank=True,
                        help_text="Label of the question (German)",
                        verbose_name="Label (German)",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the question (Markdown, English)",
                        verbose_name="Description (Markdown, English)",
                    ),
                ),
                (
                    "description_de",
                    models.TextField(
                        blank=True,
                        help_text="Description of the question (Markdown, German)",
                        verbose_name="Description (Markdown, German)",
                    ),
                ),
                (
                    "position",
                    models.IntegerField(
                        help_text="Position of the question item within one question.",
                        verbose_name="Item position",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="question_items",
                        to="instruments.question",
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        help_text="Identifying name of the item.",
                        verbose_name="Item name",
                    ),
                ),
                (
                    "goto",
                    models.TextField(
                        blank=True,
                        help_text="Describes which question item should follow this question item.",
                        null=True,
                        verbose_name="Goto (Output Filter)",
                    ),
                ),
                (
                    "input_filter",
                    models.TextField(
                        blank=True,
                        help_text="Describes which question items lead to the inclusion of this question item.",
                        null=True,
                        verbose_name="Input Filter",
                    ),
                ),
                (
                    "instruction",
                    models.TextField(
                        blank=True,
                        help_text="Instruction given for this item.",
                        verbose_name="Instruction",
                    ),
                ),
                (
                    "instruction_de",
                    models.TextField(
                        blank=True,
                        help_text="Instruction given for this item. (German)",
                        verbose_name="Instruction",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("value", models.IntegerField()),
                ("label", models.TextField()),
                ("label_de", models.TextField()),
                (
                    "question_items",
                    models.ManyToManyField(
                        related_name="answers", to="instruments.QuestionItem"
                    ),
                ),
            ],
        ),
    ]
