# Generated by Django 3.2.12 on 2022-03-31 09:39
# pylint: disable-all

import uuid

import django.db.models.deletion
from django.db import migrations, models

import config.validators
import ddionrails.base.mixins


class Migration(migrations.Migration):

    replaces = [
        ("instruments", "0001_initial"),
        ("instruments", "0002_question_period"),
        ("instruments", "0003_auto_20201016_0850"),
        ("instruments", "0004_auto_20210624_0828"),
        ("instruments", "0005_questionitem_answer"),
        ("instruments", "0006_question_images"),
        ("instruments", "0007_delete_questionimage"),
    ]

    initial = True

    dependencies = [
        ("data", "0001_initial"),
        ("studies", "0001_initial"),
        ("concepts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Instrument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        help_text="UUID of the instrument. Dependent on the associated study.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="Name of the instrument (Lowercase)",
                        max_length=255,
                        validators=[config.validators.validate_lowercase],
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        blank=True,
                        help_text="Label of the instrument (English)",
                        max_length=255,
                        verbose_name="Label (English)",
                    ),
                ),
                (
                    "label_de",
                    models.CharField(
                        blank=True,
                        help_text="Label of the instrument (German)",
                        max_length=255,
                        verbose_name="Label (German)",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the instrument (Markdown, English)",
                        verbose_name="Description (Markdown, English)",
                    ),
                ),
                (
                    "description_de",
                    models.TextField(
                        blank=True,
                        help_text="Description of the instrument (Markdown, German)",
                        verbose_name="Description (Markdown, German)",
                    ),
                ),
                (
                    "analysis_unit",
                    models.ForeignKey(
                        blank=True,
                        help_text="Foreign key to concepts.AnalysisUnit",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instruments",
                        to="concepts.analysisunit",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True,
                        help_text="Foreign key to concepts.Period",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instruments",
                        to="concepts.period",
                    ),
                ),
                (
                    "study",
                    models.ForeignKey(
                        blank=True,
                        help_text="Foreign key to studies.Study",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instruments",
                        to="studies.study",
                    ),
                ),
            ],
            options={
                "ordering": ("study", "name"),
                "unique_together": {("study", "name")},
            },
            bases=(ddionrails.base.mixins.ModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        help_text="UUID of the question. Dependent on the associated instrument.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, help_text="Name of the question", max_length=255
                    ),
                ),
                (
                    "label",
                    models.TextField(
                        blank=True,
                        help_text="Label of the question (English)",
                        verbose_name="Label (English)",
                    ),
                ),
                (
                    "label_de",
                    models.TextField(
                        blank=True,
                        help_text="Label of the question (German)",
                        verbose_name="Label (German)",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the question (Markdown, English)",
                        verbose_name="Description (Markdown, English)",
                    ),
                ),
                (
                    "description_de",
                    models.TextField(
                        blank=True,
                        help_text="Description of the question (Markdown, German)",
                        verbose_name="Description (Markdown, German)",
                    ),
                ),
                (
                    "sort_id",
                    models.IntegerField(
                        blank=True,
                        help_text="Sort order of questions within one instrument",
                        null=True,
                        verbose_name="Sort ID",
                    ),
                ),
                (
                    "items",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Items are elements in a question",
                        null=True,
                    ),
                ),
                (
                    "instrument",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="instruments.instrument",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="period",
                        to="concepts.period",
                    ),
                ),
                (
                    "instruction",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Optional question instruction.",
                        verbose_name="Instruction",
                    ),
                ),
                (
                    "instruction_de",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Optional german question instruction.",
                        verbose_name="Instruction German",
                    ),
                ),
                ("images", models.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                "unique_together": {("instrument", "name")},
            },
            bases=(ddionrails.base.mixins.ModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ConceptQuestion",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "concept",
                    models.ForeignKey(
                        help_text="Foreign key to concepts.Concept",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="concepts_questions",
                        to="concepts.concept",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        help_text="Foreign key to instruments.Question",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="concepts_questions",
                        to="instruments.question",
                    ),
                ),
            ],
            options={
                "unique_together": {("question", "concept")},
            },
        ),
        migrations.CreateModel(
            name="QuestionVariable",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "question",
                    models.ForeignKey(
                        help_text="Foreign key to instruments.Question",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions_variables",
                        to="instruments.question",
                    ),
                ),
                (
                    "variable",
                    models.ForeignKey(
                        help_text="Foreign key to data.Variable",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions_variables",
                        to="data.variable",
                    ),
                ),
            ],
            options={
                "unique_together": {("question", "variable")},
            },
        ),
        migrations.CreateModel(
            name="QuestionItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        help_text="UUID of the QuestionItem. dependent on the associated Question.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "scale",
                    models.CharField(
                        choices=[
                            ("txt", "Information Text"),
                            ("cat", "Multiple-answer multiple choice"),
                            ("bin", "Single-answer multiple choice"),
                            ("int", "Integer"),
                            ("chr", "Open-ended"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "label",
                    models.TextField(
                        blank=True,
                        help_text="Label of the question (English)",
                        verbose_name="Label (English)",
                    ),
                ),
                (
                    "label_de",
                    models.TextField(
                        blank=True,
                        help_text="Label of the question (German)",
                        verbose_name="Label (German)",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the question (Markdown, English)",
                        verbose_name="Description (Markdown, English)",
                    ),
                ),
                (
                    "description_de",
                    models.TextField(
                        blank=True,
                        help_text="Description of the question (Markdown, German)",
                        verbose_name="Description (Markdown, German)",
                    ),
                ),
                (
                    "position",
                    models.IntegerField(
                        help_text="Position of the question item within one question.",
                        verbose_name="Item position",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="question_items",
                        to="instruments.question",
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        help_text="Identifying name of the item.",
                        verbose_name="Item name",
                    ),
                ),
                (
                    "goto",
                    models.TextField(
                        blank=True,
                        help_text="Describes which question item should follow this question item.",
                        null=True,
                        verbose_name="Goto (Output Filter)",
                    ),
                ),
                (
                    "input_filter",
                    models.TextField(
                        blank=True,
                        help_text="Describes which question items lead to the inclusion of this question item.",
                        null=True,
                        verbose_name="Input Filter",
                    ),
                ),
                (
                    "instruction",
                    models.TextField(
                        blank=True,
                        help_text="Instruction given for this item.",
                        verbose_name="Instruction",
                    ),
                ),
                (
                    "instruction_de",
                    models.TextField(
                        blank=True,
                        help_text="Instruction given for this item. (German)",
                        verbose_name="Instruction",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("value", models.IntegerField()),
                ("label", models.TextField()),
                ("label_de", models.TextField()),
                (
                    "question_items",
                    models.ManyToManyField(
                        related_name="answers", to="instruments.QuestionItem"
                    ),
                ),
            ],
        ),
    ]
