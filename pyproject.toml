# https://bandit.readthedocs.io/en/latest/config.html
[tool.bandit]
skips = ["B101"]


# https://black.readthedocs.io/en/stable/usage_and_configuration/
[tool.black]
line-length = 90


# https://coverage.readthedocs.io/en/7.1.0/config.html
[tool.coverage.run]
# plugins = django_coverage_plugin
source = ["."]
omit = [
    "*/tests/*",
    "htmlcov/*",
    "*/migrations/*",
    "*/wsgi*",
    "manage.py",
    "settings/*",
]


# https://pycqa.github.io/isort/docs/configuration/config_files.html
[tool.isort]
line_length = 90
multi_line_output = 3
include_trailing_comma = true
src_paths = ["ddionrails", "tests"]
known_first_party = [
    "ddionrails",
    "tests",
]
known_third_party= [
    "PIL",
    "click",
    "dateutil",
    "django",
    "django_elasticsearch_dsl",
    "django_rq",
    "djclick",
    "elasticsearch",
    "elasticsearch_dsl",
    "factory",
    "fakeredis",
    "filer",
    "frontmatter",
    "git",
    "import_export",
    "markdown",
    "model_utils",
    "pytest",
    "tablib",
]


# https://pylint.readthedocs.io/en/latest/user_guide/configuration/index.html
[tool.pylint.master]
load-plugins = [
    "pylint_django",
    "pylint_django.checkers.migrations"
]
ignore = ["migrations"]

[tool.pylint.format]
max-line-length=90

[tool.pylint.messages_control]
# Remove C0412 for the next pylint release
# which works with isorts grouping 
disable = [
    "R0801",
    "C0412",
]

[tool.pylint.reports]
output-format = "colorized"


# https://docs.pytest.org/en/stable/customize.html
[tool.pytest.ini_options]
addopts = '-p no:cacheprovider --no-migrations --reuse-db -rf'
DJANGO_SETTINGS_MODULE = "config.settings.testing"
python_files = "test_*.py"
testpaths = ["tests"]
markers = [
    # Markers for each django app
    "concepts",
    "data",
    "ddionrails",
    "imports_app",
    "instruments",
    "publications",
    "studies",
    "workspace",
    # Markers for each type of test
    "forms",
    "views",
    "models",
    "urlconf",
    "search",
    "imports",
    "mixins",
    "functional",
]


# https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml
[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors
module = ["*.migrations.*"]
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.base"

[tool.poetry]
name = "ddionrails"
version = "7.3.3"
description = ""
authors = ["Dominique Hansen <dhansen@diw.de>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
babel = ">=2.12.1"
django = ">=4.2.3"
django-crispy-forms = "*"
crispy-bootstrap5 = "*"
django-extensions = "*"
django-import-export = "*"
django-model-utils = "*"
django-rq = ">=2.10.1"
django-webpack-loader = "*"
gunicorn = "*"
djangorestframework = ">=3.14.0"
django_filer = "*"
psycopg2-binary = "*"
django-elasticsearch-dsl = ">=8.0"
elasticsearch-dsl = ">=8.*"
elasticsearch = ">=8.*"
markdown = "*"
python-frontmatter = "*"
gitpython = "<3.1.45"
requests = ">=2.32.1"
urllib3 = ">=2.2.2"
drf-spectacular = "^0.28.0"


[tool.poetry.group.dev.dependencies]
packaging = ">=22.0"
autoflake = "*"
bandit = "*"
black = "*"
django-stubs = "*" 
djangorestframework-stubs = "*"
isort = "*"
mypy = "*"
pre-commit = "*"
pylint = "*"
pylint-django = "*"
pylint-unittest = "*"
types-markdown = "*"
pytest = "*"
pytest-cov = "*"
pytest-django = "*"
pytest-mock = "*"
factory-boy = "*"
django-coverage-plugin = "*"
requests-mock = "*"
sphinx = "*"
sphinx-rtd-theme = "*"
django-debug-toolbar = "*"
rope = "*" 
werkzeug = "==3.1.3"
selenium = "*"
pyright = "^1.1.401"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
