version: '2.4'

services:
  web:
    image: paneldata/ddionrails:latest-dev
    command: bash -c "while [ 1 ]; do python /usr/src/app/manage.py runserver_plus --print-sql 0.0.0.0:8000; test $$? -gt 128 && break; done"
    env_file: 
      - docker/environments/django.env.example
      - docker/environments/database.env.example
      - docker/environments/elasticsearch.env.example
    volumes:
      - ./ddionrails:/usr/src/app/ddionrails
      - ./config:/usr/src/app/config
      - ./local:/usr/src/app/local
      - ./tests:/usr/src/app/tests
      - ./templates:/usr/src/app/templates
      - ./htmlcov:/usr/src/app/htmlcov
      - ./assets:/usr/src/app/assets
      - ./static/dist:/usr/src/app/static/dist
      - ./webpack.config.js:/usr/src/app/webpack.config.js
    pids_limit: -1

  postgres:
    env_file:
      - docker/environments/database.env.example

  elasticsearch:
    environment:
      - discovery.type=single-node
      # settings for dejavu-access, see https://hub.docker.com/r/appbaseio/dejavu/
      # https://opensource.appbase.io/reactive-manual/vue/getting-started/reactivebase.html
      - http.cors.enabled=true
      - http.cors.allow-credentials=true
      - http.cors.allow-origin=* # TODO set host and port of dejavu / reactivesearch
      - http.cors.allow-headers=Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With
    ports:
      - 9200:9200

# Uncomment these lines, if you want to use Kibana
#  kibana:
#    image: kibana:4.6.0
#    ports:
#      - 5601:5601
#    networks:
#      - ddi_net

# Uncomment these lines, if you want to use dejavu
#  dejavu:
#    # see: https://hub.docker.com/r/appbaseio/dejavu/
#    image: appbaseio/dejavu:3.3.1
#    ports:
#      - 1358:1358
#    networks:
#      - ddi_net

  nginx:
    volumes: 
      - ./docker/nginx/nginx.dev.conf:/etc/nginx/nginx.conf

# Uncomment these lines, if you want to use selenium
#  selenium:
#    image: selenium/standalone-firefox:3.141.59
#    networks:
#      - ddi_net
#    ports:
#      - 4444